buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
        mavenCentral()
    }
    dependencies {
        classpath "com.netflix.nebula:nebula-publishing-plugin:4.4.4"
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
    }
}

plugins {
    id 'nebula.maven-publish' version '4.4.4'
}

project.publishing {
    publications {
        mavenJava(MavenPublication) {
            from project.components.java
            println "Removing dependencies without a version"

            pom.withXml {
                def pomNode = asNode()
                // version-less dependencies are handled with dependencyManagement
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username mavenUser
                password mavenPassword
            }
            url "http://maven-upload.causecode.com"
        }
    }
}

version "3.0.0"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.grails.grails-doc"
apply plugin: "io.spring.dependency-management"
apply plugin: "com.jfrog.bintray"

// Used for publishing to central repository, remove if not needed
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://repo.desirableobjects.co.uk" }
    maven { url "https://raw.github.com/fernandezpablo85/scribe-java/mvn-repo" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile "org.grails:grails-plugin-testing"
    console "org.grails:grails-console"

    compile 'org.scribe:scribe:1.3.7'
    testCompile 'org.gmock:gmock:0.8.2'
    testCompile 'org.objenesis:objenesis:1.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'grails-plugins'
        userOrg = 'desirable-objects' // If you want to publish to an organization
        name = "desirableobjects.grails.plugins:$project.name"
        issueTrackerUrl = "https://github.com/antony/grails-oauth-scribe/issues"
        vcsUrl = "https://github.com/antony/grails-oauth-scribe"
        version {
            attributes = ['grails-plugin': "desirableobjects.grails.plugins:$project.name"]
            name = project.version
        }
    }
}
